<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>BaseSettings</name>
	<description>Demo project for Spring Boot</description>
	<organization>
	</organization>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<postgresql.version>42.5.1</postgresql.version>
		<mssql.version>8.0.27</mssql.version>
	</properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
		默认会自动配置内存数据源，如h2, hqldb等,Spring boot中JPA是依赖Hibernate实现的 -->
		<!-- spring-boot-starter-data-jpa和spring-boot-starter-jdbc默认配置的连接池是HikariCP -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<!-- 当使用DBCP2时，需要排除默认引入的HikariCP数据库连接池组件 -->
			<exclusions>
				<!-- 默认引入的HikariCP -->
				<exclusion>
					<groupId>com.zaxxer</groupId>
					<artifactId>HikariCP</artifactId>
				</exclusion>
				<!-- 排除Logback  -->
				<exclusion>
					<artifactId>spring-boot-starter-logging</artifactId>
					<groupId>org.springframework.boot</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--		<dependency>-->
		<!--			<groupId>com.h2database</groupId>-->
		<!--			<artifactId>h2</artifactId>-->
		<!--			<scope>runtime</scope>-->
		<!--		</dependency>-->
		<!--配置自定义数据源MySQL依赖-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.33</version>
			<scope>runtime</scope>
		</dependency>
		<!-- 配置PostgreSQL数据库驱动 -->
<!--		<dependency>-->
<!--			<groupId>org.postgresql</groupId>-->
<!--			<artifactId>postgresql</artifactId>-->
<!--			<version>${postgresql.version}</version>-->
<!--		</dependency>-->
		<!-- 配置SQL Server数据库驱动 -->
<!--		<dependency>-->
<!--			<groupId>com.microsoft.sqlserver</groupId>-->
<!--			<artifactId>mssql-jdbc</artifactId>-->
<!--			<version>${mssql.version}</version>-->
<!--		</dependency>-->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-jdbc</artifactId>-->
		<!--		</dependency>-->
		<!-- 配置Druid数据库连接池组件 -->
		<!-- Spring boot 2.x依赖的Druid -->
<!--		<dependency>-->
<!--			<groupId>com.alibaba</groupId>-->
<!--			<artifactId>druid-spring-boot-starter</artifactId>-->
<!--			<version>1.2.23</version>-->
<!--		</dependency>-->
		<!-- Spring boot 3.x依赖的Druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-3-starter</artifactId>
			<version>1.2.20</version>
		</dependency>
		<!-- 配置第三方数据源，而不是Spring Boot自带的Tomcat数据源， 如DBCP2数据源,DBCP2.5.0支持Java 8及以上，
		基于Apache Commons Pool, 此时需要从jpa中排除HikariCP -->
		<!--		<dependency>-->
		<!--			<groupId>org.apache.commons</groupId>-->
		<!--			<artifactId>commons-dbcp2</artifactId>-->
		<!--			<version>2.9.0</version>-->
		<!--		</dependency>-->
		<!-- 配置web-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- 排除 tomcat 的引入 -->
			<!--			<exclusions>-->
			<!--				<exclusion>-->
			<!--					<groupId>org.springframework.boot</groupId>-->
			<!--					<artifactId>spring-boot-starter-tomcat</artifactId>-->
			<!--				</exclusion>-->
			<!--			</exclusions>-->
			<!-- 排除Logback日志组件 -->
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 引入内嵌的Undertow -->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-undertow</artifactId>-->
		<!--		</dependency>-->
		<!-- 引入内嵌的Jetty -->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-jetty</artifactId>-->
		<!--		</dependency>-->
		<!-- Log4j2 日志记录框架配置 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- 配置MyBatis依赖 -->
<!--		<dependency>-->
<!--			<groupId>org.mybatis.spring.boot</groupId>-->
<!--			<artifactId>mybatis-spring-boot-starter</artifactId>-->
<!--			<version>3.0.4</version>-->
<!--		</dependency>-->

		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-configuration-processor</artifactId>-->
		<!--			<version>3.1.5</version>-->
		<!--			<optional>true</optional>-->
		<!--		</dependency>-->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation -->
		<!-- MyBatis-Plus -->
		<!-- Spring boot 2.x引入依赖 -->
<!--		<dependency>-->
<!--			<groupId>com.baomidou</groupId>-->
<!--			<artifactId>mybatis-plus-boot-starter</artifactId>-->
<!--			<version>3.5.8</version>-->
<!--		</dependency>-->
		<!-- Spring boot 3.x引入依赖 -->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-spring-boot3-starter</artifactId>
			<version>3.5.8</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-extension</artifactId>
			<version>3.5.8</version>
		</dependency>
		<!-- 配置Redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
			<exclusions>
				<!-- 不依赖Redis的异步客户端lettuce -->
				<exclusion>
					<groupId>io.lettuce</groupId>
					<artifactId>lettuce-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 引入Redis客户端驱动Jedis -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<version>3.4.2</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Hibernate Validator -->
		<!--		<dependency>-->
		<!--			<groupId>org.hibernate.validator</groupId>-->
		<!--			<artifactId>hibernate-validator</artifactId>-->
		<!--			<version>6.2.5.Final</version>-->
		<!--		</dependency>-->
		<!-- PDF视图渲染 -->
		<!-- https://mvnrepository.com/artifact/org.xhtmlrenderer/flying-saucer-core -->
		<dependency>
			<groupId>org.xhtmlrenderer</groupId>
			<artifactId>flying-saucer-core</artifactId>
			<version>9.11.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.itextpdf/itextpdf -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13.4</version>
		</dependency>

		<!-- 配置RabbitMQ消息中间件 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

		<!-- Spring Security安全控制 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- WebSocket依赖项 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.websocket</groupId>
			<artifactId>jakarta.websocket-api</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-websocket</artifactId>
		</dependency>
		<!--		<dependency>-->
		<!--			<groupId>io.undertow</groupId>-->
		<!--			<artifactId>undertow-websockets-jsr</artifactId>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- API Doc依赖库 -->
<!--		<dependency>-->
<!--			<groupId>io.swagger</groupId>-->
<!--			<artifactId>swagger-annotations</artifactId>-->
<!--			<version>1.6.2</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>com.github.xiaoymin</groupId>
			<artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
			<version>4.5.0</version>
		</dependency>
		<!-- 解析yml配置 -->
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
		</dependency>
		<!-- 热部署 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- 表示依赖不会传递 -->
			<optional>true</optional>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>copy-certificate</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes/certificate</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/certs</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.springdoc</groupId>-->
<!--				<artifactId>springdoc-openapi-maven-plugin</artifactId>-->
<!--				<version>last-release-version</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>generate-swagger-docs</id>-->
<!--						<goals>-->
<!--							<goal>generate</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
		</plugins>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
